{"version":3,"file":"static/js/145.4d31f7f6.chunk.js","mappings":"uMAIaA,EAAY,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAClBC,GAAWC,EAAAA,EAAAA,MAEjB,OAEI,2BACKF,EAAOG,KAAI,YAAiB,IAAfC,EAAc,EAAdA,GAAGC,EAAW,EAAXA,MACb,OACI,0BACI,SAAC,KAAD,CAAMC,GAAE,kBAAaF,GAAMG,MAAO,CAACC,KAAKP,GAAxC,UACI,wBAAKI,OAFHD,EAOjB,IAVL,MAaP,C,yKCfYK,EAAa,SAAC,GAAyB,IAAD,EAAtBC,EAAsB,EAAtBA,gBACzB,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAK,UAAGF,EAAaG,IAAI,gBAApB,QAAgC,GAkC3C,OAtBAC,EAAAA,EAAAA,YAAU,WAAM,wCAGZ,uGACgCC,EAAAA,EAAAA,IAAiBH,GADjD,OACUI,EADV,OAGUC,EAAqBD,EAAcf,KACrC,kBAAuD,CACnDC,GADJ,EAAGA,GAECC,MAFJ,EAAOA,MAGHe,OAAQ,kCAHZ,EAAcC,YAIVC,aAJJ,EAAmCA,aAAnC,IAQJZ,EAAgBS,GAZpB,4CAHY,sBACPL,GADO,mCAkBZS,EACH,GAAE,CAACT,EAAOJ,KAIP,SAACc,EAAA,EAAD,WACI,kBAAMC,SAlCmB,SAAAC,GAC7BA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cACTf,EAAQc,EAAKE,SAASC,OAAOC,MAEnCnB,EAAgB,CAAEC,MAAAA,IAElBc,EAAKK,OACR,EA0BO,WACI,kBACIC,KAAK,OACLC,KAAK,SACLC,aAAa,MACbC,YAAY,mBAEhB,mBAAQH,KAAK,SAAb,wBAKf,EC1CD,EAXe,WACX,OAAwCI,EAAAA,EAAAA,UAAS,IAAjD,eAAOC,EAAP,KAAqB7B,EAArB,KAEA,OACI,iCACI,SAACD,EAAD,CAAYC,gBAAiBA,IAC5B6B,IAAgB,SAACxC,EAAA,EAAD,CAAWC,OAAQuC,MAG/C,C","sources":["components/MovieList/MovieList.jsx","components/SearchForm/SearchForm.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from \"react-router-dom\";\n// import { Box } from \"components/Box\";\n\nexport const MovieList = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        \n        <div>\n            {movies.map(({id,title}) => {\n                return (\n                    <div key={id}>\n                        <Link to={`/movies/${id}`} state={{from:location}}>\n                            <h3>{title}</h3>\n                        </Link>\n                    </div>\n                );\n\n            })};\n        </div>\n    )\n}\n\nMovieList.propTypes = {\n    movies: PropTypes.arrayOf(\n        PropTypes.shape({\n            id: PropTypes.number.isRequired,\n            title: PropTypes.string.isRequired,\n        })\n    ).isRequired,\n};","import PropTypes from 'prop-types';\nimport { useSearchParams } from \"react-router-dom\";\nimport { useEffect } from \"react\";\n\nimport { fetchMovieSearch } from \"../../Api\";\nimport { Box } from \"components/Box\";\n\nexport const SearchForm = ({ setSearchMovies }) => {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const query = searchParams.get('query') ?? '';\n\n    const hendleSabmitSearchMovies = e => {\n        e.preventDefault();\n        const form = e.currentTarget;\n        const query = form.elements.search.value;\n\n        setSearchParams({ query });\n\n        form.reset();\n    };\n\n    useEffect(() => {\n        if (!query) return;\n\n        async function fetchAwaiter() {\n            const allDataMovies = await fetchMovieSearch(query);\n\n            const requiredDataMovies = allDataMovies.map(\n                ({ id, title, poster_path: poster, vote_average }) => ({\n                    id,\n                    title,\n                    poster: 'https://image.tmdb.org/t/p/w500' + poster,\n                    vote_average,\n                })\n            );\n\n            setSearchMovies(requiredDataMovies);\n        }\n\n        fetchAwaiter();\n    }, [query, setSearchMovies]);\n\n\n    return (\n        <Box>\n            <form onSubmit={hendleSabmitSearchMovies}>\n                <input\n                    type=\"text\"\n                    name=\"search\"\n                    autoComplete=\"off\"\n                    placeholder=\"Search movies\"\n                />\n                <button type=\"submit\">Search</button>\n            </form>\n            \n        </Box>\n    );\n};\n\nSearchForm.propTypes = {\n    setSearchMovies: PropTypes.func.isRequired,\n};","import { MovieList } from \"components/MovieList/MovieList\";\nimport { useState } from \"react\";\nimport { SearchForm } from \"../../components/SearchForm/SearchForm\";\n\nconst Movies = () => {\n    const [searchMovies, setSearchMovies] = useState([]);\n\n    return (\n        <>\n            <SearchForm setSearchMovies={setSearchMovies} />\n            {searchMovies && <MovieList movies={searchMovies} />}\n        </>\n    );\n};\n\nexport default Movies;"],"names":["MovieList","movies","location","useLocation","map","id","title","to","state","from","SearchForm","setSearchMovies","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieSearch","allDataMovies","requiredDataMovies","poster","poster_path","vote_average","fetchAwaiter","Box","onSubmit","e","preventDefault","form","currentTarget","elements","search","value","reset","type","name","autoComplete","placeholder","useState","searchMovies"],"sourceRoot":""}