{"version":3,"file":"static/js/736.f892e60f.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wCAA8CD,GACvDG,EAAM,UAAMF,EAAN,WAKCG,EAAkB,mCAAG,+GAELC,IAAAA,IAAA,UAAaH,IAFR,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAGnBA,GAHmB,yDAKnBC,QAAQC,IAAR,OALmB,yDAAH,qDASlBC,EAAc,mCAAG,WAAMC,GAAN,kGAELL,IAAAA,IAAA,UAChBF,GADgB,OACPO,EADO,oBACYV,IAHP,uBAEnBM,EAFmB,EAEnBA,KAFmB,kBAKnBA,GALmB,yDAOnBC,QAAQC,IAAR,OAPmB,yDAAH,sDAWdG,EAAc,mCAAG,WAAMD,GAAN,gGAEHL,IAAAA,IAAA,UAClBF,GADkB,OACTO,EADS,4BACkBV,IAHf,cAEpBY,EAFoB,yBAKnBA,EAASN,KAAKO,MALK,yDAOnBN,QAAQC,IAAR,OAPmB,yDAAH,sDAWdM,EAAiB,mCAAG,WAAMJ,GAAN,gGAENL,IAAAA,IAAA,UAClBF,GADkB,OACTO,EADS,4BACkBV,EADlB,YAFM,cAEvBY,EAFuB,yBAKtBA,EAASN,KAAKS,SALQ,yDAOrBR,QAAQC,IAAR,OAPqB,yDAAH,sDAWjBQ,EAAgB,mCAAG,WAAMC,GAAN,gGAELZ,IAAAA,IAAA,UAClBJ,EADkB,iCACeD,EADf,yBACuCiB,IAHlC,cAEtBL,EAFsB,yBAKrBA,EAASN,KAAKS,SALO,yDAOrBR,QAAQC,IAAR,OAPqB,yDAAH,qD,uIClDhBU,EAAOC,EAAAA,GAAAA,GAAH,6CACF,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAEHC,EAAOJ,EAAAA,GAAAA,EAAH,uEACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACA,SAAAF,GAAC,OAAIA,EAAEC,MAAMG,YAAYC,IAAxB,IAEPC,EAAYP,EAAAA,GAAAA,EAAH,gDACP,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,mBCwBhB,EA3Bc,WACZ,IAAQZ,GAAYiB,EAAAA,EAAAA,MAAZjB,QACR,GAAwBkB,EAAAA,EAAAA,UAAS,IAAjC,eAAOf,EAAP,KAAagB,EAAb,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACRnB,EAAAA,EAAAA,IAAeD,GAASqB,MAAK,SAAAnB,GAAQ,OAAIiB,EAAQjB,EAAZ,GACtC,GAAE,CAACF,KAGF,SAACsB,EAAA,EAAD,CAAKC,GAAG,KAAR,SACCpB,EAAKqB,KAAI,gBAAGC,EAAH,EAAGA,aAAcC,EAAjB,EAAiBA,KAAMC,EAAvB,EAAuBA,UAAWC,EAAlC,EAAkCA,GAAlC,OACR,UAACpB,EAAD,YACE,gBAAKqB,IAAKJ,EACN,kCAAoCA,EACpC,uDACFK,IAAKJ,EACLK,MAAM,MACNC,OAAO,SAET,SAACnB,EAAD,UAAOa,KACP,SAACV,EAAD,UAAYW,MATHC,EADH,KAeb,C","sources":["Api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'bb8332b99fe7bc8079c8a7da417e56ea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\n\n\n \nexport const fetchTrendingMovie = async () => {\n    try {\n        const {data} = await axios.get(`${TREND_URL}`);\n        return data;\n    } catch (error) {\n        return console.log(error);\n    }\n}\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const {data} = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return (console.log(error));\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\n","import styled from \"styled-components\";\n\nexport const List = styled.li`\npadding-top: ${p => p.theme.space[5]}px;\n`\nexport const Name = styled.p`\n    margin-top: ${p => p.theme.space[3]}px;\n    font-weight: ${p => p.theme.fontWeights.bold};\n`\nexport const Character = styled.p`\n margin-top: ${p => p.theme.space[3]}px;   \n`","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Box } from 'components/Box';\nimport { List,Name,Character } from './Cast.styled';\n\nimport { fetchMovieCast } from '../../Api';\n\n const Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(response => setCast(response));\n  }, [movieId]);\n    \n  return (\n    <Box as=\"ul\">\n    {cast.map(({ profile_path, name, character, id }) => (\n      <List key={id}>\n        <img src={profile_path\n          ? 'https://image.tmdb.org/t/p/w500' + profile_path\n          : 'https://dummyimage.com/200x300/000/fff&text=No+photo'}\n          alt={name}\n          width=\"200\"\n          height=\"100\"\n        />\n        <Name>{name}</Name>\n        <Character>{character}</Character>\n      </List>\n    ))}\n  </Box>);\n    \n};\n\nexport default Cast;\n\n"],"names":["API_KEY","BASE_URL","TREND_URL","ID_URL","fetchTrendingMovie","axios","data","console","log","fetchMovieById","movieId","fetchMovieCast","response","cast","fetchMovieReviews","results","fetchMovieSearch","query","List","styled","p","theme","space","Name","fontWeights","bold","Character","useParams","useState","setCast","useEffect","then","Box","as","map","profile_path","name","character","id","src","alt","width","height"],"sourceRoot":""}