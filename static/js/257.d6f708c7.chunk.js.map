{"version":3,"file":"static/js/257.d6f708c7.chunk.js","mappings":"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","sources":["Api.js","pages/MovieDetails/MovieDetails.styled.jsx","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'bb8332b99fe7bc8079c8a7da417e56ea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\n\n\n \nexport const fetchTrendingMovie = async () => {\n    try {\n        const {data} = await axios.get(`${TREND_URL}`);\n        return data;\n    } catch (error) {\n        return console.log(error);\n    }\n}\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const {data} = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return (console.log(error));\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\n","import styled from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nexport const BackLink = styled(Link)`\ndisplay: block;\ntext-decoration: none;\nfont-size: ${p => p.theme.fontSizes.l};\nfont-weight: ${p => p.theme.fontWeights.bold};\ncolor: ${p=>p.theme.colors.muted};\nbackground-color: ${p=>p.theme.colors.primary};\nmargin-bottom: ${p=>p.theme.space[2]}px;\nwidth: 300px;\ntext-align: center;\n`\nexport const Title = styled.p`\nfont-size:${p=> p.theme.fontSizes.l};\nfont-weight:${p=>p.theme.fontWeights.bold};\nmargin-bottom: ${p=>p.theme.space[3]}px;\n`\nexport const Text = styled.p`\nmargin-bottom: ${p => p.theme.space[3]}px;\n`\nexport const GenresList = styled.ul`\ndisplay:flex;\n\nli:last-child{\n    margin-right: 0;\n}\n`\nexport const List = styled.li`\n    margin-right: ${p => p.theme.space[3]}px;\n    margin-bottom: ${p => p.theme.space[3]}px;\n`\nexport const InfoTitle = styled.p`\n font-size:${p => p.theme.fontSizes.m};\n font-weight: ${p=>p.theme.fontWeights.bold};\n`\nexport const InfoLink = styled(Link)`\ndisplay: block;\ntext-decoration: none;\nmargin-top: ${p=>p.theme.space[3]}px;\nfont-weight: ${p=>p.theme.fontWeights.bold};\ncolor: ${p=>p.theme.colors.primary};\n\n&:hover{\n    color: ${p=>p.theme.colors.red};\n}\n`","\nimport { useParams, Outlet, useLocation } from \"react-router-dom\";\nimport { useEffect, useState } from \"react\";\nimport { fetchMovieById } from \"../../Api\";\nimport { Loader } from \"components/Loader/Loader\";\nimport { BackLink,Title,Text,GenresList,List,InfoTitle,InfoLink } from \"./MovieDetails.styled\";\n\n const MovieDetails = () => {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const location = useLocation();\n    \n    useEffect(() => {\n        fetchMovieById(movieId).then(data => {\n            setMovie(data);\n        });\n    }, [movieId]);\n\n    if (!movie) {\n        return null;\n    }\n\n    const {\n        original_title: title,\n        release_date: date,\n        poster_path: poster,\n        vote_average: vote,\n        overview,\n        genres,\n    } = movie;\n\n    const backLinkHref = location.state?.from ?? \"/\";\n    \n\n    return (\n        <main>\n            <BackLink to={backLinkHref}>Back</BackLink>\n           \n            {movie ? (<div>\n                <img\n                src={poster ?\n                    'https://image.tmdb.org/t/p/w500' + poster : \n                    'https://i.gifer.com/5h4.gif'}\n                alt={title}\n                width=\"300\"\n                height=\"200\"\n            />\n                <Title>{title} ({date.slice(0, 4)})</Title>\n                <Text>User score: {Math.round(vote * 100 / 10)}%</Text>\n                <h3>Overview</h3>\n                <Text>{overview}</Text>\n                <h3>Genres</h3>\n                <GenresList>\n                    {genres.map(({ name, id }) => (\n                        <List key={id}>{name}</List>\n                    ))}\n                </GenresList></div>) : (<Loader/>)}\n\n            <div>\n                <InfoTitle>Information :</InfoTitle>\n                <ul>\n                    <li>\n                        <InfoLink to=\"cast\">Cast</InfoLink>\n                    </li>\n                    <li>\n                        <InfoLink to=\"reviews\">Reviews</InfoLink>\n                    </li>\n                </ul>\n            </div>\n            <Outlet />\n        </main>\n    );\n\n};\n\nexport default MovieDetails;\n\n\n\n\n"],"names":["API_KEY","BASE_URL","TREND_URL","ID_URL","fetchTrendingMovie","axios","data","console","log","fetchMovieById","movieId","fetchMovieCast","response","cast","fetchMovieReviews","results","fetchMovieSearch","query","BackLink","styled","Link","p","theme","fontSizes","l","fontWeights","bold","colors","muted","primary","space","Title","Text","GenresList","List","InfoTitle","m","InfoLink","red","useParams","useState","movie","setMovie","location","useLocation","useEffect","then","title","original_title","date","release_date","poster","poster_path","vote","vote_average","overview","genres","backLinkHref","state","from","to","src","alt","width","height","slice","Math","round","map","name","id","Loader"],"sourceRoot":""}