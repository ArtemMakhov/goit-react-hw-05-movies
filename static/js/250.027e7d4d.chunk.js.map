{"version":3,"file":"static/js/250.027e7d4d.chunk.js","mappings":"4TAEMA,EAAU,mCACVC,EAAW,+BACXC,EAAS,UAAMD,EAAN,wCAA8CD,GACvDG,EAAM,UAAMF,EAAN,WAKCG,EAAkB,mCAAG,+GAELC,IAAAA,IAAA,UAAaH,IAFR,uBAEnBI,EAFmB,EAEnBA,KAFmB,kBAGnBA,GAHmB,yDAKnBC,QAAQC,IAAR,OALmB,yDAAH,qDASlBC,EAAc,mCAAG,WAAMC,GAAN,kGAELL,IAAAA,IAAA,UAChBF,GADgB,OACPO,EADO,oBACYV,IAHP,uBAEnBM,EAFmB,EAEnBA,KAFmB,kBAKnBA,GALmB,yDAOnBC,QAAQC,IAAR,OAPmB,yDAAH,sDAWdG,EAAc,mCAAG,WAAMD,GAAN,gGAEHL,IAAAA,IAAA,UAClBF,GADkB,OACTO,EADS,4BACkBV,IAHf,cAEpBY,EAFoB,yBAKnBA,EAASN,KAAKO,MALK,yDAOnBN,QAAQC,IAAR,OAPmB,yDAAH,sDAWdM,EAAiB,mCAAG,WAAMJ,GAAN,gGAENL,IAAAA,IAAA,UAClBF,GADkB,OACTO,EADS,4BACkBV,EADlB,YAFM,cAEvBY,EAFuB,yBAKtBA,EAASN,KAAKS,SALQ,yDAOrBR,QAAQC,IAAR,OAPqB,yDAAH,sDAWjBQ,EAAgB,mCAAG,WAAMC,GAAN,gGAELZ,IAAAA,IAAA,UAClBJ,EADkB,iCACeD,EADf,yBACuCiB,IAHlC,cAEtBL,EAFsB,yBAKrBA,EAASN,KAAKS,SALO,yDAOrBR,QAAQC,IAAR,OAPqB,yDAAH,qD,yIClDhBU,EAAcC,EAAAA,GAAAA,GAAH,2GACV,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IACE,SAAAF,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAED,SAAAF,GAAC,OAAGA,EAAEC,MAAMC,MAAM,EAAjB,IAGLC,EAAUJ,EAAAA,GAAAA,GAAH,kDACA,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAERE,EAASL,EAAAA,GAAAA,GAAH,+CACF,SAAAC,GAAC,OAAEA,EAAEC,MAAMC,MAAM,EAAhB,IAELG,EAAUN,EAAAA,GAAAA,EAAH,gDACA,SAAAC,GAAC,OAAEA,EAAEC,MAAMK,OAAOC,KAAjB,I,SCerB,EA1BgB,WACZ,IAAQjB,GAAYkB,EAAAA,EAAAA,MAAZlB,QACR,GAA4BmB,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAMA,OAJAC,EAAAA,EAAAA,YAAU,YACNlB,EAAAA,EAAAA,IAAkBJ,GAASuB,MAAK,SAAAC,GAAG,OAAIH,EAAUG,EAAd,GACtC,GAAE,CAACxB,KAGA,0BACMoB,EAAOK,OAAS,GACd,sEAEA,SAACjB,EAAD,UACKY,EAAOM,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACR,UAAChB,EAAD,YACI,SAACC,EAAD,UAASa,KACT,SAACZ,EAAD,UAAUa,MAFAC,EADN,OAU/B,C","sources":["Api.js","components/Reviews/Rewiews.styled.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\nconst API_KEY = 'bb8332b99fe7bc8079c8a7da417e56ea';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst TREND_URL = `${BASE_URL}/trending/movie/week?api_key=${API_KEY}`;\nconst ID_URL = `${BASE_URL}/movie/`;\n\n\n\n \nexport const fetchTrendingMovie = async () => {\n    try {\n        const {data} = await axios.get(`${TREND_URL}`);\n        return data;\n    } catch (error) {\n        return console.log(error);\n    }\n}\n\nexport const fetchMovieById = async movieId => {\n  try {\n    const {data} = await axios.get(\n      `${ID_URL}${movieId}?api_key=${API_KEY}`\n    );\n    return data;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieCast = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/credits?api_key=${API_KEY}`\n    );\n    return response.data.cast;\n  } catch (error) {\n    return console.log(error);\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const response = await axios.get(\n      `${ID_URL}${movieId}/reviews?api_key=${API_KEY}&page=1`\n    );\n    return response.data.results;\n  } catch (error) {\n    return (console.log(error));\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const response = await axios.get(\n      `${BASE_URL}/search/movie?api_key=${API_KEY}&page=1&query=${query}`\n    );\n    return response.data.results;\n  } catch (error) {\n    return console.log(error);\n  }\n}\n\n","import styled from \"styled-components\";\n\nexport const ListReviews = styled.ul`\npadding-top:${p=>p.theme.space[5]}px;\npadding-bottom:${p => p.theme.space[5]}px;\nli:last-child{\nmargin-bottom: ${p=> p.theme.space[0]};\n}\n`\nexport const Article = styled.li`\n    margin-bottom:${p => p.theme.space[4]}px;\n`\nexport const Author = styled.h3`\nmargin-bottom: ${p=>p.theme.space[2]}px;\n`\nexport const Content = styled.p`\nbackground-color: ${p=>p.theme.colors.muted};\n`\n","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieReviews } from '../../Api';\nimport { ListReviews,Author,Content,Article } from \"./Rewiews.styled\";\n\nconst Reviews = () => {\n    const { movieId } = useParams();\n    const [review, setReview] = useState([]);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then(res => setReview(res))\n    }, [movieId]);\n\n    return (\n        <div>\n            {!review.length > 0 ? (\n                <h3>We don't have any reviews for this movie</h3>\n            ) : (\n                <ListReviews>\n                    {review.map(({ author, content, id }) => (\n                        <Article key={id}>\n                            <Author>{author}</Author>\n                            <Content>{content}</Content>\n                        </Article>\n                    ))}\n                </ListReviews>\n            )}\n        </div>\n    );\n};\n\nexport default Reviews;"],"names":["API_KEY","BASE_URL","TREND_URL","ID_URL","fetchTrendingMovie","axios","data","console","log","fetchMovieById","movieId","fetchMovieCast","response","cast","fetchMovieReviews","results","fetchMovieSearch","query","ListReviews","styled","p","theme","space","Article","Author","Content","colors","muted","useParams","useState","review","setReview","useEffect","then","res","length","map","author","content","id"],"sourceRoot":""}